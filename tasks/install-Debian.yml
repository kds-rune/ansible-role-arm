---

- name: configure dvd region
  apt:
    name: regionset
    state: present
    update_cache: yes
    cache_valid_time: 3600
  become: True
  notify: set_region
  when: set_dvd_region == 'yes'

- name: install system packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  become: True
  with_items:
    - git
    - python3
    - python3-pip
    - software-properties-common
    - python-software-properties
    - screen

## TODO: add 'codename' parameter for Debian
- name: add PPA repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  become: True
  with_items:
    - 'ppa:heyarje/makemkv-beta'
    - 'ppa:stebbins/handbrake-releases'
    - 'ppa:mc3man/xerus-media'

- name: install ARM packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  become: True
  with_items:
    - makemkv-bin
    - makemkv-oss
    - handbrake-cli
    - libavcodec-extra
    - abcde
    - flac
    - imagemagick
    - glyrc
    - cdparanoia
    - at

- name: install/configure libdvd
  apt:
    name: libdvd-pkg
    state: present
    update_cache: yes
    cache_valid_time: 3600
  become: True
  notify: configure_libdvd

- meta: flush_handlers

- name: clone ARM repository
  git:
    repo: 'https://github.com/ahnooie/automatic-ripping-machine.git'
    dest: /opt/arm
    force: yes
  become: True

- name: install ARM pip dependencies
  pip:
    requirements: '/opt/arm/requirements.txt'
    executable: pip3
  become: True

- name: Create ARM symbolic links
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  become: True
  with_items:
    - { src: '/opt/arm/51-automedia.rules', dest: '/lib/udev/rules.d/51automedia.rules' }
    - { src: '/opt/arm/.abcde.conf', dest: '/root/.abcde.conf' }

- name: Copy ARM systemd files
  copy:
    src: /opt/arm/arm@.service
    dest: /etc/systemd/system/arm@.service
    remote_src: yes
  become: True

- name: Copy ARM configuration files
  template:
    src: config.j2
    dest: /opt/arm/config
  become: True

- name: Create ARM directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  become: True
  with_items:
    - "{{ arm_path_base }}"
    - "{{ arm_path_raw }}"
    - "{{ arm_path_media }}"

